# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:

    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        if not self.nodeDepth(root):
            return True
        if self.nodeDepth(root) < 0:
            return False
        return True
            

    def nodeDepth(self, node: Optional[TreeNode]) -> int:
        if not node: 
            return 0
        if not node.left and not node.right: 
            return 1
        if node.left or node.right: 
            x = self.nodeDepth(node.left)
            y = self.nodeDepth(node.right)
            if abs(x-y) > 1: 
                return -5000
            return x+1 if x>y else y+1
