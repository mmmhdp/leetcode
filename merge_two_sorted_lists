# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if not list1 and not list2:
            return None
        if not list1 or not list2:
            return list1 if not list2 else list2
        
        merged = ListNode()
        if list1.val <= list2.val:
            merged.val = list1.val 
            list1 = list1.next    
        else:
            merged.val = list2.val
            list2 = list2.next    
        
        tmp_merged = merged
        while list1 and list2:
            curr = ListNode()
            if list1.val <= list2.val:
                curr.val = list1.val
                list1 = list1.next
            else: 
                curr.val = list2.val
                list2 = list2.next
            tmp_merged.next = curr
            tmp_merged = curr

        if list1:
            tmp_merged.next = list1
        if list2:
            tmp_merged.next = list2

        return merged
